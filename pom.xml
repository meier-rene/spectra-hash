<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>edu.ucdavis.fiehnlab</groupId>
    <artifactId>splash</artifactId>
    <packaging>pom</packaging>
    <version>1.8</version>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <encoding>UTF-8</encoding>
        <scala.version>2.13</scala.version>
        <groovy.version>4.0.24</groovy.version>
        <java.version>21</java.version>
    </properties>

    <modules>
        <module>core</module>
        <module>web</module>
        <module>validation</module>
        <module>scala</module>
        <module>docker</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.1</version>
    </parent>



    <scm>
        <url>https://github.com/berlinguyinca/spectra-hash</url>
        <connection>scm:git:git://github.com/berlinguyinca/spectra-hash.git</connection>
        <developerConnection>scm:git:git@github.com:berlinguyinca/spectra-hash.git</developerConnection>
    </scm>

    <developers>
        <developer>
            <email>berlinguyinca@gmail.com</email>
            <name>Gert Wohlgemuth</name>
            <url>https://github.com/berlinguyinca</url>
            <id>berlinguyinca</id>
        </developer>
    </developers>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>5.11.4</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>5.5.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.mangofactory</groupId>
                <artifactId>swagger-springmvc</artifactId>
                <version>1.0.2</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor_2.11</artifactId>
                <version>2.3.11</version>
            </dependency>

            <dependency>
                <groupId>io.spray</groupId>
                <artifactId>spray-client_2.11</artifactId>
                <version>1.3.2</version>
            </dependency>

            <dependency>
                <groupId>io.spray</groupId>
                <artifactId>spray-json_2.11</artifactId>
                <version>1.3.2</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-scala_${scala.version}</artifactId>
                <version>2.18.2</version>
            </dependency>

            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- our default stack to be used in the fiehnlab -->
    <profiles>

        <!--scala support for compiling of tests-->
        <profile>
            <id>scala-test</id>

            <activation>
                <file>
                    <exists>src/test/scala</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scala.version}.16</version>
                </dependency>

                <dependency>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest_${scala.version}</artifactId>
                    <version>3.2.19</version>
                </dependency>

            </dependencies>


            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>net.alchim31.maven</groupId>
                            <artifactId>scala-maven-plugin</artifactId>
                            <version>4.9.2</version>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/main/scala</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <version>4.9.2</version>
                        <executions>
                            <execution>
                                <id>scala-compile</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>scala-test-compile</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>testCompile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <scalaVersion>${scala.version}</scalaVersion>
                            <jvmArgs>
                                <jvmArg>-Xms64m</jvmArg>
                                <jvmArg>-Xmx1024m</jvmArg>
                            </jvmArgs>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.5.2</version>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.scalatest</groupId>
                        <artifactId>scalatest-maven-plugin</artifactId>
                        <version>1.0</version>
                        <configuration>
                            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                            <junitxml>.</junitxml>
                            <filereports>scalatest.txt</filereports>
                            <parallel>false</parallel>
                            <forkMode>once</forkMode>
                        </configuration>
                        <executions>
                            <execution>
                                <id>test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- groovy compile support -->
        <profile>
            <id>groovy</id>
            <activation>
                <file>
                    <exists>src/main/groovy</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                    <version>${groovy.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/main/groovy</source>
                                    </sources>

                                </configuration>
                            </execution>
                            <execution>
                                <id>test</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/test/groovy</source>
                                    </sources>

                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>compile</id>
                                <phase>compile</phase>
                                <configuration>
                                    <tasks>
                                        <mkdir dir="${basedir}/src/main/groovy"/>
                                        <taskdef name="groovyc"
                                                 classname="org.codehaus.groovy.ant.Groovyc">
                                            <classpath refid="maven.compile.classpath"/>
                                        </taskdef>
                                        <mkdir dir="${project.build.outputDirectory}"/>
                                        <groovyc destdir="${project.build.outputDirectory}"
                                                 srcdir="${basedir}/src/main/groovy/" listfiles="true">
                                            <classpath refid="maven.compile.classpath"/>
                                        </groovyc>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>test-compile</id>
                                <phase>test-compile</phase>
                                <configuration>
                                    <tasks>
                                        <mkdir dir="${basedir}/src/test/groovy"/>
                                        <taskdef name="groovyc"
                                                 classname="org.codehaus.groovy.ant.Groovyc">
                                            <classpath refid="maven.test.classpath"/>
                                        </taskdef>
                                        <mkdir dir="${project.build.testOutputDirectory}"/>
                                        <groovyc destdir="${project.build.testOutputDirectory}"
                                                 srcdir="${basedir}/src/test/groovy/" listfiles="true">
                                            <classpath refid="maven.test.classpath"/>
                                        </groovyc>
                                    </tasks>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- support to compile scala files -->
        <profile>
            <id>scala</id>

            <activation>
                <file>
                    <exists>src/main/scala</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scala.version}.16</version>
                </dependency>

                <dependency>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest_${scala.version}</artifactId>
                    <version>3.2.19</version>
                </dependency>

            </dependencies>

            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>net.alchim31.maven</groupId>
                            <artifactId>scala-maven-plugin</artifactId>
                            <version>4.9.2</version>
                        </plugin>
                    </plugins>
                </pluginManagement>

                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>src/main/scala</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <version>4.9.2</version>
                        <executions>
                            <execution>
                                <id>scala-compile</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                    <goal>compile</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <scalaVersion>${scala.version}.16</scalaVersion>
                            <jvmArgs>
                                <jvmArg>-Xms64m</jvmArg>
                                <jvmArg>-Xmx1024m</jvmArg>
                            </jvmArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- test jar -->
        <profile>
            <id>test-jar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <version>3.4.2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>test-jar</goal>
                                </goals>
                                <phase>test-compile</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- java doc jar -->
        <profile>
            <id>doc-jar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- source jar -->
        <profile>
            <id>source-jar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- this profile is building a docker image for us, which can be a standalone or deployed in a docker-compose file -->
        <profile>
            <id>docker</id>

            <!-- will activate if you have a .docker file in your project directoy-->
            <activation>
                <file>
                    <exists>.docker</exists>
                </file>
            </activation>


            <properties>
                <docker.registry>eros.fiehnlab.ucdavis.edu</docker.registry>
                <docker.baseImage>java</docker.baseImage>
                <docker.imageName>mona-${project.name}</docker.imageName>
                <docker.imagePath>${docker.registry}/${docker.imageName}</docker.imagePath>
                <docker.expose>8080</docker.expose>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <id>download-remote-resources</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <get src="https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh"
                                             dest="${project.build.directory}"/>
                                        <chmod file="${project.build.directory}/wait-for-it.sh" perm="777"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.4.0</version>
                        <configuration>
                            <imageName>${docker.registry}/${docker.imageName}</imageName>
                            <baseImage>${docker.baseImage}</baseImage>
                            <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                            <exposes>
                                <expose>${docker.expose}</expose>
                            </exposes>
                            <!-- copy the service's jar file from target into the root directory of the image -->
                            <resources>
                                <resource>
                                    <targetPath>/</targetPath>
                                    <directory>${project.build.directory}</directory>
                                    <include>${project.build.finalName}.jar</include>
                                    <include>wait-for-it.sh</include>
                                </resource>
                            </resources>
                            <forceTags>true</forceTags>

                            <imageTags>
                                <imageTag>${project.version}</imageTag>
                                <imageTag>latest</imageTag>
                            </imageTags>

                            <runs>
                                <run>chmod 777 /wait-for-it.sh</run>
                            </runs>
                        </configuration>

                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>push-image-version</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <imageName>${docker.registry}/${docker.imageName}:${project.version}</imageName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>push-image-latest</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <configuration>
                                    <imageName>${docker.registry}/${docker.imageName}:latest</imageName>
                                </configuration>
                            </execution>

                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
